name: Build payloads

run-name: ${{ github.actor }} is building payloads for AWS Lambda

on:
  pull_request:
    branches: main
  push:
    branches: main
    tags:
      - v*

jobs:
  build-go:
    strategy:
      matrix:
        go: [1.22]
        architecture: [x86_64, arm64]
    name: Building Go ${{ matrix.go }} (${{ matrix.architecture }})
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/go
    env:
      HandlerFileName: ${{ matrix.architecture == 'arm64' && 'bootstrap' || 'main' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Install dependencies
        run: go install golang.org/x/lint/golint

      - name: Run build
        run: go build -ldflags="-s -w" -o ${{ env.HandlerFileName }} cmd/main.go
        env:
          GOARCH: ${{ matrix.architecture == 'arm64' && 'arm64' || 'amd64' }}
          GOOS: linux
          CGO_ENABLED: 0

      - name: Run vet & lint
        run: |
          go vet cmd/main.go
          golint cmd/main.go

      - name: Run UPX
        uses: crazy-max/ghaction-upx@v2
        with:
          version: latest
          files: |
            ./src/go/${{ env.HandlerFileName }}
          args: --best --lzma

      - name: Package payload
        run: zip lambda_payload_go1.x_${{ matrix.architecture }}.zip ${{ env.HandlerFileName }}

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: |
            src/go/lambda_payload_go1.x_${{ matrix.architecture }}.zip

  build-nodejs:
    strategy:
      matrix:
        nodejs: [16, 18, 20]
        architecture: [x86_64, arm64]
    name: Building NodeJs ${{ matrix.nodejs }} (${{ matrix.architecture }})
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/nodejs
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs }}

      - name: Install dependencies
        run: npm install

      - name: Test
        run: npm test

      - name: Package payload
        run: zip lambda_payload_nodejs${{ matrix.nodejs }}.x_${{ matrix.architecture  }}.zip *

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: |
            src/nodejs/lambda_payload_nodejs${{ matrix.nodejs }}.x_${{ matrix.architecture }}.zip
